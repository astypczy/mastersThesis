# .github/workflows/ci-backend.yml
name: CI · Backend (Ubuntu + Postgres service)

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
  pull_request:
    branches: [main]
    paths:
      - 'backend/**'

jobs:
  build-migrate-rollback:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: mastersThesis
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_URL: jdbc:postgresql://localhost:5432/mastersThesis
      DB_USER: postgres
      DB_PASS: postgres
      PGPASSWORD: postgres

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Export JAVA_HOME
        run: echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV

      - name: Build backend (skip tests)
        working-directory: backend
        run: mvn clean package -DskipTests
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          pip install psycopg2 faker

      - name: Run Python DB initializer
        run: python sql/addData.py

      - name: Download & unpack Flyway CLI
        run: |
          FLYWAY_VERSION=10.20.1
          curl -L "https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/${FLYWAY_VERSION}/flyway-commandline-${FLYWAY_VERSION}-linux-x64.tar.gz" \
            | tar xz -C $HOME
          chmod +x $HOME/flyway-${FLYWAY_VERSION}/flyway
          echo "$HOME/flyway-${FLYWAY_VERSION}" >> $GITHUB_PATH

      - name: Flyway migrate
        run: |
          flyway \
            -url="$DB_URL" \
            -user="$DB_USER" \
            -password="$DB_PASS" \
            -baselineOnMigrate=true \
            -locations=filesystem:backend/src/main/resources/db/migration \
            migrate

      - name: Manual Flyway rollback 
        run: |
          echo ">>> Running manual rollback for Group 1–13"
          for script in \
            U15__undo_create_big_table.sql \
            U14__undo_change_type_error.sql \
            U13__undo_create_audit_trigger.sql \
            U12__undo_create_audit_table.sql \
            U11__undo_add_indexes.sql \
            U10__undo_create_name_sync_trigger.sql \
            U9__undo_create_name_sync_function.sql \
            U8__undo_split_name_columns.sql \
            U7__undo_disable_legacy_trigger.sql \
            U6__undo_init_person.sql \
            U5__undo_create_person_name_sync_trigger.sql \
            U4__undo_create_person_name_sync_function.sql \
            U3__undo_copy_legacy_to_new.sql \
            U2__undo_add_new_name.sql
          do
            psql -h localhost -U postgres -d mastersThesis -f backend/src/main/resources/db/migration/$script
          done
          echo "Cleaning flyway_schema_history manually..."
          for ver in 15 14 13 12 11 10 9 8 7 6 5 4 3 2
          do
            psql -h localhost -U postgres -d mastersThesis \
              -c "DELETE FROM flyway_schema_history WHERE version = '$ver';"
          done

      - name: Install Liquibase via APT
        run: |
          wget -O- https://repo.liquibase.com/liquibase.asc \
            | gpg --dearmor > liquibase-keyring.gpg \
            && sudo mv liquibase-keyring.gpg /usr/share/keyrings/ \
            && echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/liquibase-keyring.gpg] https://repo.liquibase.com stable main' \
               | sudo tee /etc/apt/sources.list.d/liquibase.list > /dev/null

          sudo apt-get update
          sudo apt-get install -y liquibase

      - name: Liquibase Update
        run: |
          liquibase \
            --changeLogFile=backend/src/main/resources/db/changelog/db.changelog-master.xml \
            --url=$DB_URL \
            --username=$DB_USER \
            --password=$DB_PASS \
            update
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}

      - name: Liquibase Rollback Count (host)
        run: |
          liquibase \
            --changeLogFile=backend/src/main/resources/db/changelog/db.changelog-master.xml \
            --url=$DB_URL \
            --username=$DB_USER \
            --password=$DB_PASS \
            rollback-count --count=23
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}

      # - name: Run unit tests
      #   working-directory: backend
      #   run: mvn test